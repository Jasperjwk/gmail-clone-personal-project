{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","Button","startIcon","fontSize","InboxIcon","length","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","EmailList","Checkbox","PeopleIcon","LocalOfferIcon","to","message","timestamp","SendMail","useForm","register","handleSubmit","watch","errors","onSubmit","formData","console","log","add","moment","Date","format","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c79fd888.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n\n    logout: (state) => {\n    \n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCGLJ-QI21XVqmha-_ld-FziyDZ_LRXk6Q\",\r\n    authDomain: \"clone-personal-project-4d9af.firebaseapp.com\",\r\n    projectId: \"clone-personal-project-4d9af\",\r\n    storageBucket: \"clone-personal-project-4d9af.appspot.com\",\r\n    messagingSenderId: \"515689684792\",\r\n    appId: \"1:515689684792:web:d823c2739b90af68242bcd\",\r\n    measurementId: \"G-R853TZHH28\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { db, auth, provider };\r\n\r\n","import React from 'react';\r\nimport \"./Header.css\"\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useSelector } from 'react-redux';\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction Header() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout())\r\n        })\r\n      \r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <img\r\n                    src=\"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\"\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <SearchIcon/>\r\n                <input placeholder=\"Search mail\" type=\"text\"/>\r\n                <ArrowDropDownIcon className=\"header__inputCaret\"/>\r\n\r\n                \r\n            </div>\r\n\r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon/>\r\n                </IconButton>\r\n                <Avatar onClick={signOut} src={user?.photoUrl}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ Icon, title, number, selected }) {\r\n    return (\r\n        // If it is active then by default, i will hide the p tag\r\n        <div className={`sidebarOption ${selected && \"sidebarOption--active\"}`}>\r\n            <Icon />\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n  name: \"mail\",\n  initialState: {\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n\n    openSendMessage: (state) => {\n      \n      // state.value += 1;\n\n      state.sendMessageIsOpen = true;\n    },\n    closeSendMessage: (state) => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectMail, openSendMessage, closeSendMessage } = mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n","import { Button, IconButton } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport \"./Sidebar.css\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport SidebarOption from './SidebarOption';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSendMessage, selectOpenMail } from './features/mailSlice';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Sidebar() {\r\n\r\n    // A gun that fires off an event\r\n    const dispatch = useDispatch();\r\n\r\n    const selectedMail = useSelector(selectOpenMail);\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        // Snapshot is like a camera that snaps real time data\r\n        // It's like a real time listener so anything that changes\r\n        // in the database then it is going to be updated\r\n        db.collection(\"emails\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot(snapshot => setEmails(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n        }))))\r\n    }, []) //Run it once when the emailList component loads\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button \r\n                className=\"sidebar__compose\"\r\n                startIcon={<AddIcon fontSize=\"large\"/>}\r\n                onClick={() => dispatch(openSendMessage())}\r\n                >\r\n                    Compose\r\n            </Button>\r\n\r\n\r\n            {/* <div className=\"emailList__list\">\r\n                {emails.map(({id, data: {to, subject, message, timestamp}}) => (\r\n                    <EmailRow \r\n                        id={id}\r\n                        key={id}\r\n                        title={to}\r\n                        subject={subject}\r\n                        description={message}\r\n                        time = {timestamp}\r\n                    />\r\n                ))}\r\n            </div> */}\r\n\r\n            <SidebarOption \r\n            Icon={InboxIcon} \r\n            title=\"Inbox\" \r\n            number={emails.length}\r\n            selected={true}\r\n            />\r\n            <SidebarOption Icon={StarIcon} title=\"Starred\" number={emails.length}/>\r\n            <SidebarOption Icon={AccessTimeIcon} title=\"Snoozed\" number={emails.length}/>\r\n            <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={emails.length}/>\r\n            <SidebarOption Icon={NearMeIcon} title=\"Sent\" number={emails.length}/>\r\n            <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={emails.length}/>\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={emails.length}/>\r\n\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { IconButton } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport \"./Mail.css\"\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectOpenMail } from './features/mailSlice';\r\n\r\nfunction Mail() {\r\n\r\n    const history = useHistory();\r\n    const selectedMail = useSelector(selectOpenMail);\r\n\r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail__tools\">\r\n                <div className=\"mail__toolsLeft\">\r\n                    <IconButton onClick={() => history.push(\"/\")}>\r\n                        <ArrowBackIcon/>\r\n\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInboxIcon/>\r\n                    </IconButton>\r\n                        \r\n\r\n                    <IconButton>\r\n                        <ErrorIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <EmailIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <WatchLaterIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircleIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportantIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMoreIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <PrintIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToAppIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"mail__body\">\r\n                <div className=\"mail__bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportantIcon className=\"mail__important\"/>\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className=\"mail__time\">{selectedMail?.time}</p>\r\n                </div>\r\n\r\n                <div className=\"mail__message\">\r\n                    <p>{selectedMail?.description}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail\r\n","import React from 'react'\r\nimport \"./Section.css\";\r\n\r\nfunction Section({ Icon, title, color, selected}) {\r\n    return (\r\n        // If it is selected, i am gonna apply css\r\n        <div \r\n        className={`section ${selected && \"section--selected\"}`}\r\n            style={{\r\n                borderBottom: `3px solid ${color}`,\r\n                color: `${selected && color}`,\r\n            }}\r\n        >\r\n            <Icon/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Section\r\n","import React from 'react'\r\nimport './EmailRow.css'\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport { IconButton } from '@material-ui/core';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectMail } from './features/mailSlice';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction EmailRow({ id, title, subject, description, time,}) {\r\n    \r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const openMail = () => {\r\n        dispatch(selectMail({\r\n            id,\r\n            title, \r\n            subject, \r\n            description, \r\n            time,\r\n        }))\r\n\r\n        history.push(\"/mail\")\r\n    }\r\n\r\n    return (\r\n        <div onClick ={openMail}className=\"emailRow\">\r\n            <div className=\"emailRow__options\">\r\n                <CheckBoxOutlineBlankIcon/>\r\n\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon/>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon/>\r\n                </IconButton>\r\n            </div>\r\n\r\n            <h3 className=\"emailRow__title\">\r\n                {title}\r\n            </h3>\r\n\r\n            <div className=\"emailRow__message\">\r\n                <h4>{subject}\r\n                    <span className=\"emailRow__description\"> {\" - \"}\r\n                        {description}\r\n                    </span>\r\n                \r\n                </h4>\r\n            </div>\r\n            \r\n            <div className=\"emailRow__time\">\r\n                {time}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailRow\r\n","import { Checkbox, IconButton } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport \"./EmailList.css\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Section from './Section';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailRow from './EmailRow';\r\nimport { db } from \"./firebase\";\r\n\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        // Snapshot is like a camera that snaps real time data\r\n        // It's like a real time listener so anything that changes\r\n        // in the database then it is going to be updated\r\n        db.collection(\"emails\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot(snapshot => setEmails(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n        }))))\r\n    }, []) //Run it once when the emailList component loads\r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList__settings\">\r\n                <div className=\"emailList__settingsLeft\">\r\n                    <Checkbox/>\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon/>\r\n                    </IconButton>     \r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>              \r\n                </div>\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"emailList__sections\">\r\n                <Section Icon={InboxIcon} title='Primary' color=\"red\" selected/>\r\n                <Section Icon={PeopleIcon} title='Social' color=\"#1A73E8\" />\r\n                <Section Icon={LocalOfferIcon} title='Promotions' color=\"green\"/>\r\n            </div>\r\n\r\n            <div className=\"emailList__list\">\r\n                {emails.map(({id, data: {to, subject, message, timestamp}}) => (\r\n                    <EmailRow \r\n                        id={id}\r\n                        key={id}\r\n                        title={to}\r\n                        subject={subject}\r\n                        description={message}\r\n                        time = {timestamp}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailList\r\n","import React from 'react'\r\nimport './SendMail.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport { db } from \"./firebase\";\r\nimport firebase from 'firebase';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nfunction SendMail() {\r\n\r\n    const { register, handleSubmit, watch, errors} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection(\"emails\").add(\r\n            {\r\n                to: formData.to,\r\n                subject: formData.subject,\r\n                message: formData.message,\r\n                timestamp: moment(new Date()).format('MMMM Do YYYY, h:mm:ss a'),\r\n            }\r\n        )\r\n        dispatch(closeSendMessage());\r\n    }\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail__header\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon\r\n                onClick={() => dispatch(closeSendMessage())}\r\n                className=\"sendMail__close\"/>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                 name='to' \r\n                 placeholder=\"To\" \r\n                 type=\"email\" \r\n                 {...register('to', { required: true })}\r\n                //  ref={register('to', { required: true })}\r\n                //  ref={register({ required: true})}\r\n                required\r\n                 />\r\n                 {/* If errors.to exists, then go ahead and render a\r\n                 p tag which says 'to is required! */}\r\n                 {/* {errors.to && <p className='sendMail__error'>To is Required!</p>} */}\r\n\r\n                <input \r\n                name='subject' \r\n                placeholder=\"Subject\" \r\n                type=\"text\"\r\n                {...register('subject', { required: true })}\r\n                // ref={register('subject', { required: true })}\r\n                // ref={register({ required: true})}\r\n                required\r\n                />\r\n                <input\r\n                 name='message'\r\n                 placeholder=\"Message...\" \r\n                 type=\"text\"\r\n                 className=\"sendMail__message\"\r\n                 {...register('message', { required: true })}\r\n                //  ref={register('message', { required: true })}\r\n                //  ref={register({ required: true})}\r\n                required\r\n                />\r\n\r\n                <div className=\"sendMail__options\">\r\n                    <Button \r\n                    className=\"sendMail__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from './features/userSlice'\r\nimport { auth, provider } from './firebase'\r\nimport \"./Login.css\"\r\n\r\nfunction Login() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then(({user}) => {\r\n            dispatch(login({\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoUrl: user.photoURL,\r\n            }))\r\n        })\r\n        .catch(error => alert(error.message));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img \r\n                    src=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\" \r\n                 alt=\"\"\r\n                />\r\n\r\n                <Button  variant=\"contained\" color=\"primary\" onClick={signIn}>\r\n                    Login\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Mail from './Mail';\nimport EmailList from './EmailList';\nimport SendMail from './SendMail';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\n\nfunction App() {\n\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // It's gonna listen to the authentication state\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        // The user is logged in\n        dispatch(login({\n          displayName: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        }))\n      } else {\n        \n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n\n      {!user? (\n        <Login/>\n      ): (\n        <div className=\"app\">\n        <Header/>\n\n        <div className=\"app__body\">\n          <Sidebar/>\n\n          <Switch>\n            <Route path=\"/mail\">\n              <Mail />\n            </Route>\n            <Route path=\"/\">\n              <EmailList />\n            </Route>\n          </Switch>\n        </div>\n\n        {/* If sendMessageIsOpen then i should render the sendMail */}\n\n          {sendMessageIsOpen && <SendMail/>}\n      \n         </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\n\nexport const store = configureStore({\n  reducer: {\n    // It's like an onion\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}